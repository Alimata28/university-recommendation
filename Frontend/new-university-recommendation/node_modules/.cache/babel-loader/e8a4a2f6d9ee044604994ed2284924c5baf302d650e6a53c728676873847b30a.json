{"ast":null,"code":"import React,{useState}from'react';import{useLocation,useNavigate}from'react-router-dom';import'./CompareUniversities.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const CompareUniversities=()=>{var _location$state;const location=useLocation();const universities=((_location$state=location.state)===null||_location$state===void 0?void 0:_location$state.universities)||[];// Retrieves universities from the state or returns an empty array if there are no universities\nconst[selectedUniversities,setSelectedUniversities]=useState([]);const navigate=useNavigate();const handleSelectUniversity=university=>{setSelectedUniversities(prev=>{if(prev.includes(university)){return prev.filter(u=>u!==university);}else if(prev.length<2){return[...prev,university];}return prev;});};const handleCompare=()=>{if(selectedUniversities.length===2){navigate('/compare-results',{state:{selectedUniversities}});}else{alert('Please select exactly two universities to compare.');}};return/*#__PURE__*/_jsxs(\"div\",{className:\"compare-page\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Compare Universities\"}),universities.length>0?/*#__PURE__*/_jsx(\"div\",{className:\"universities-container\",children:universities.map((uni,index)=>{// Handling incorrect or missing values\nconst ranking=uni.Ranking&&!isNaN(parseInt(uni.Ranking,10))?parseInt(uni.Ranking,10):'N/A';return/*#__PURE__*/_jsxs(\"div\",{className:`university-card ${selectedUniversities.includes(uni)?'selected':''}`,onClick:()=>handleSelectUniversity(uni),children:[/*#__PURE__*/_jsx(\"h2\",{children:uni.University}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Ranking: \",ranking]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"City: \",uni.City]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Tuition Fee: \",uni.Tuition_fee]})]},index);})}):/*#__PURE__*/_jsx(\"p\",{children:\"No universities found for comparison.\"}),/*#__PURE__*/_jsx(\"button\",{className:\"compare-button\",onClick:handleCompare,children:\"Compare\"})]});};export default CompareUniversities;","map":{"version":3,"names":["React","useState","useLocation","useNavigate","jsx","_jsx","jsxs","_jsxs","CompareUniversities","_location$state","location","universities","state","selectedUniversities","setSelectedUniversities","navigate","handleSelectUniversity","university","prev","includes","filter","u","length","handleCompare","alert","className","children","map","uni","index","ranking","Ranking","isNaN","parseInt","onClick","University","City","Tuition_fee"],"sources":["C:/Documents/Staj II/Projet pour le staj/recommender_system/Frontend/new-university-recommendation/src/components/CompareUniversities.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport './CompareUniversities.css';\r\n\r\nconst CompareUniversities = () => {\r\n    const location = useLocation();\r\n    const universities = location.state?.universities || []; // Retrieves universities from the state or returns an empty array if there are no universities\r\n    const [selectedUniversities, setSelectedUniversities] = useState([]);\r\n    const navigate = useNavigate();\r\n\r\n    const handleSelectUniversity = (university) => {\r\n        setSelectedUniversities(prev => {\r\n            if (prev.includes(university)) {\r\n                return prev.filter(u => u !== university);\r\n            } else if (prev.length < 2) {\r\n                return [...prev, university];\r\n            }\r\n            return prev;\r\n        });\r\n    };\r\n\r\n    const handleCompare = () => {\r\n        if (selectedUniversities.length === 2) {\r\n            navigate('/compare-results', { state: { selectedUniversities } });\r\n        } else {\r\n            alert('Please select exactly two universities to compare.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"compare-page\">\r\n            <h1>Compare Universities</h1>\r\n            {universities.length > 0 ? (\r\n                <div className=\"universities-container\">\r\n                    {universities.map((uni, index) => {\r\n                        // Handling incorrect or missing values\r\n                        const ranking = uni.Ranking && !isNaN(parseInt(uni.Ranking, 10)) ? parseInt(uni.Ranking, 10) : 'N/A';\r\n\r\n                        return (\r\n                            <div key={index} className={`university-card ${selectedUniversities.includes(uni) ? 'selected' : ''}`} onClick={() => handleSelectUniversity(uni)}>\r\n                                <h2>{uni.University}</h2>\r\n                                <p>Ranking: {ranking}</p>\r\n                                <p>City: {uni.City}</p>\r\n                                <p>Tuition Fee: {uni.Tuition_fee}</p>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            ) : (\r\n                <p>No universities found for comparison.</p>\r\n            )}\r\n            <button className=\"compare-button\" onClick={handleCompare}>Compare</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CompareUniversities;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}